#!/bin/bash

stty -echo

trap 'end 130' EXIT INT
trap init_term WINCH

init_term(){
  shopt -s checkwinsize; (:;:)
  
  ((snakeX=COLUMNS/2)); ((snakeY=LINES/2))
  CENTER="$snakeY;$snakeX"
  
  printf '\e[?1049h\e[2J\e[?25l'
  rand_block
}

read_keys() {
  while read -rsn1 -t "$1"; do
    [[ $REPLY == $'\e' ]]&& read -rsn2 -t "$1"
    KEY="${REPLY^^}"
  done
}

rand_block(){
  ((blockX=SRANDOM%COLUMNS+1)); ((blockY=SRANDOM%LINES+1))
  block="$blockY;$blockX"

  printf '\e[%sH\e[41m \e[m' "$block"
}

game_over(){
  for _ in 1 7; do
    printf '\e[%sH\e[3D\e[3%dmGAME OVER\e[m' "$CENTER" "$_"
    sleep .1
  done
}

end(){
  stty echo
  printf '\e[?1049l\e[?25h'
  exit "${1:-0}"
}

len=3

init_term
for((;;)){
  read_keys .1
  case ${KEY:-L} in
    Q) end;;
    H|A|\[D) ((snakeX--));; J|S|\[B) ((snakeY++));;
    K|W|\[A) ((snakeY--));; L|D|\[C) ((snakeX++));;
    *) continue;;
  esac

  if (( snakeX < 1 )); then snakeX="$COLUMNS"
  elif (( snakeX > COLUMNS )); then snakeX=1
  elif (( snakeY < 1 )); then snakeY="$LINES"
  elif (( snakeY > LINES )); then snakeY=1
  fi

  snake+=("$snakeY;$snakeX")
  printf '\e[%sH\e[42m \e[m' "${snake[-1]}"

  if (( ${i:=0} >= len )); then
    printf '\e[%sH \e[m' "${snake[0]}"
    snake=("${snake[@]:1}")
    ((snakeBodyCount=${#snake[@]}-1))

    
    for _ in "${snake[@]::$snakeBodyCount}"; do
      [[ $_ == $block ]]&&{ ((len++)); rand_block; }
      [[ $_ == ${snake[-1]} ]]&&{ for _ in {0..5}; do game_over; done; end; }
    done
  else ((i++))
  fi
}